import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as p,c as r,a as n,b as s,d as e,f as l}from"./app-59ccfb7d.js";const c="/assets/postImg/1.png",i={},u=n("h1",{id:"三元表达式的嵌套",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#三元表达式的嵌套","aria-hidden":"true"},"#"),s(" 三元表达式的嵌套")],-1),d={href:"http://t.csdn.cn/PLRVU",target:"_blank",rel:"noopener noreferrer"},_=n("p",null,[n("strong",null,"语法结构表达式"),n("br"),s(" 1/值 ? 'true 值' : 表达式 2/值 ?  ‘true 值’:表达式 3/值 ? ‘true 值’:'false 值'")],-1),k=n("p",null,[n("strong",null,"案例")],-1),m=n("p",null,"快递有四个状态 1 已下单 2 已付款 3 已发货 4 已收货。",-1),v=n("p",null,"弹出一个框输入 1-4 之间的数，显示出对应的订单状态",-1),b=n("p",null,"通过 if 分支做（简单），但是想想用",-1),g={href:"https://so.csdn.net/so/search?q=%E4%B8%89%E5%85%83%E8%A1%A8%E8%BE%BE%E5%BC%8F&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},h=l(`<p>怎么做？</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">&quot;查询快递，请输入1~4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 第一段如果num=1，则返回&#39;已下单&#39;，否则在:右边进行下一段判断，以此类推</span>
<span class="token keyword">var</span> express_order <span class="token operator">=</span>
	num <span class="token operator">==</span> <span class="token number">1</span>
		<span class="token operator">?</span> <span class="token string">&quot;已下单&quot;</span>
		<span class="token operator">:</span> num <span class="token operator">==</span> <span class="token number">2</span>
		<span class="token operator">?</span> <span class="token string">&quot;已付款&quot;</span>
		<span class="token operator">:</span> num <span class="token operator">==</span> <span class="token number">3</span>
		<span class="token operator">?</span> <span class="token string">&quot;已发货&quot;</span>
		<span class="token operator">:</span> num <span class="token operator">==</span> <span class="token number">4</span>
		<span class="token operator">?</span> <span class="token string">&quot;已收货&quot;</span>
		<span class="token operator">:</span> <span class="token string">&quot;未查询到，不到1~4范围内&quot;</span><span class="token punctuation">;</span>
<span class="token function">alert</span><span class="token punctuation">(</span>express_order<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>语法详解</strong></p><figure><img src="`+c+'" alt="1" tabindex="0" loading="lazy"><figcaption>1</figcaption></figure>',4);function f(x,q){const a=o("ExternalLinkIcon");return p(),r("div",null,[u,n("p",null,[s("URL: "),n("a",d,[s("http://t.csdn.cn/PLRVU"),e(a)])]),_,k,m,v,b,n("p",null,[n("a",g,[s("三元表达式"),e(a)])]),h])}const V=t(i,[["render",f],["__file","三元表达式的嵌套.html.vue"]]);export{V as default};
